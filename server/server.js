/* ----------- IMPORT PACKAGES ----------- */
const Koa = require('koa');
const Router = require('koa-router');
var bodyParser = require('koa-bodyparser');
const morgan = require('koa-morgan');
const app = new Koa();
const router = new Router();

/* ----------- IMPORT SERVER ROUTES ----------- */
const roundZero = require('./roundZero.js');
const roundOne = require('./roundOne.js');
const roundTwo = require('./roundTwo.js');
const roundThree = require('./roundThree.js');

app.use(morgan('combined'));
app.use(bodyParser());
app.use(router.routes());


/* ----------- ROUND 0 - PASSING HISTORICAL DATA TO PRICING SERVICE ----------- */

	/* ----------- STEP 1 GENERATE & LOAD INITIAL 10 MILLION DATA ----------- */
	// 10 Million entries generated by the function in /database/generateTenMillionDataEntries.js.
	// 10 Million entries saved in /TenMillionEntries.
	// 10 Million entries loaded via COPY in Cassandra shell (cqlsh).

	/* ----------- STEP 2 PASS DATA TO PRICING SERVICE ----------- */
	const postToPricingService = () => {
		roundZero.sendToPricingService();
	}

/* ----------- ROUND 1 - USER OPENS THE APP AND GETS SURGE RATE ----------- */

	/* ----------- USER DISAGREES WITH SURGE RATE ----------- */
	router.post('/events/history', async (ctx, next) => {
		console.log('This is what we are getting from Mark', Object.values(ctx.request.body).join(','));
		roundOne.logCloseEvent(Object.values(ctx.request.body).join(','))
		.then(() => {
			console.log('Successful insertion!');
			postToLocationService();
			postToPricingService();
		})
		.catch((err) => {
			console.log('There was an error with the insertion', err)
		})
	})

/* ----------- ROUND 2 - USER ENTERS DROPOFF LOCATION AND GETS PRICE ----------- */

	/* ----------- USER DISAGREES WITH SURGE RATE ----------- */
	// ALREADY INVOKED ABOVE

/* ----------- ROUND 3 - USER AGREES TO PRICE AND BOOKS THE RIDE/EVENT ----------- */

	/* ----------- USER DISAGREES WITH SURGE RATE ----------- */
	// ALREADY INVOKED ABOVE

	/* ----------- USER BOOKS RIDE ----------- */
	const postToLocationService = () => {
		roundThree.postToLocationService();
	}

/* ----------- 200ms TESTING ----------- */
// // Uncomment To Test 200ms
// const testing = () => { 
// 		for(let i = 0; i < 20; i++) {
// 			roundZero.sendToPricingService()
// 		}
// 	}
// testing();

app.listen(3000, () => console.log('Server started on Port 3000'));